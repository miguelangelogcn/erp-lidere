rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isEmployee() {
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.roleId != 'student';
    }

    function isStudent() {
       return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.roleId == 'student';
    }

    // Default deny
    match /{document=**} {
      allow read, write: if false;
    }

    // Users can read their own data, employees can read all users
    match /users/{userId} {
      allow read: if request.auth != null && (request.auth.uid == userId || isEmployee());
      allow create: if request.auth != null;
      allow update: if request.auth != null && (request.auth.uid == userId || isEmployee());
    }
    
    // Roles can be read by any employee, but only managed by them
    match /roles/{roleId} {
      allow read, write: if isEmployee();
    }
    
    match /contacts/{contactId} {
      allow read, write: if isEmployee();
    }
    
    match /companies/{companyId} {
      allow read, write: if isEmployee();
    }
    
    match /pipelines/{pipelineId} {
      allow read, write: if isEmployee();
    }
    
    match /deals/{dealId} {
      allow list: if isEmployee();
      allow get: if request.auth != null; // Allow any authenticated user to get a single deal
      allow create, update, delete: if isEmployee();
      
       match /comments/{commentId} {
        allow read, write: if request.auth != null;
      }
    }
    
    match /products/{productId} {
        allow read, write: if isEmployee();
    }
    
    match /onboardings/{onboardingId} {
        allow read, write: if isEmployee();
    }
    
    match /followUps/{followUpId} {
        // Employees can see all, students only their own
        allow read: if (isEmployee() || (isStudent() && resource.data.studentUserId == request.auth.uid));
        allow create, update, delete: if isEmployee();
        
        match /mentorships/{mentorshipId} {
             allow read: if (isEmployee() || (isStudent() && get(/databases/$(database)/documents/followUps/$(followUpId)).data.studentUserId == request.auth.uid));
             allow create, update, delete: if isEmployee();
        }
        
         match /actionPlanTasks/{taskId} {
             allow read: if (isEmployee() || (isStudent() && get(/databases/$(database)/documents/followUps/$(followUpId)).data.studentUserId == request.auth.uid));
             // Students can only update status to 'completed'
             allow update: if (isEmployee() || (isStudent() && get(/databases/$(database)/documents/followUps/$(followUpId)).data.studentUserId == request.auth.uid));
             allow create, delete: if isEmployee();
        }
    }

    match /courses/{courseId} {
      allow read: if request.auth != null; // Any authenticated user can read course info
      
      match /modules/{moduleId} {
         allow read: if request.auth != null;
         
         match /lessons/{lessonId} {
            allow read: if request.auth != null;
         }
      }
    }

    match /progress/{userId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
     match /financialAccounts/{accountId} {
        allow read, write: if isEmployee();
    }
    
    match /financialDebts/{debtId} {
        allow read, write: if isEmployee();
    }

    match /employeeCustomFields/{fieldId} {
        allow read: if request.auth != null; // All users might need to see field definitions
        allow write: if isEmployee();
    }
    
    match /contactCustomFields/{fieldId} {
        allow read: if isEmployee();
        allow write: if isEmployee();
    }
  }
}
